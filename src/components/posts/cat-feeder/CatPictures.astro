---
// This is a little overcomplicated, but I'm not changing it.

import * as fs from "fs";
import path from "path";
import { Picture } from "astro:assets";
import Zoom from "react-medium-image-zoom";

/**
 * Note that file reads occur relative to project root
 */
const BASE_DIR = "./src/assets/cat-feeder/intro";

function getAnimals(): string[] {
  return fs.readdirSync(BASE_DIR);
}

async function getImages(animalName: string): Promise<any[][]> {
  const pathName = path.join(BASE_DIR, animalName);
  return fs.readdirSync(pathName).map((fileName) => {
    const fullPath = path.join(BASE_DIR, animalName, fileName);
    return [
      path.basename(fileName, path.extname(fileName)),
      import(
        /* @vite-ignore */
        path.join("/", fullPath)
      ),
    ];
  });
}

// yeah, it does sequential async calls, but it runs at compile time so I don't care.
const paths = await Promise.all(
  getAnimals().map(async (animalName) => [animalName, await getImages(animalName)])
);
---

<style>
  img,
  figure,
  figcaption {
    padding: 0;
    margin: 0;
  }

  figure {
    width: fit-content;
    height: fit-content;
  }

  figcaption {
    text-align: center;
    line-height: 0;
  }
  .container {
    display: flex;
  }
  .fixed-height img {
    height: 150px;
    width: 150px;
    object-fit: cover; /* Crops the image to fill the container */
  }
</style>

<div class="container mx-auto p-4">
  <div class="flex flex-wrap">
    {
      paths.map(([animalName, animalData]) =>
        animalData.map(([filename, image]) => (
          <div class="flex-1 min-w-[150px] max-w-[300px] gap-0">
            <div class="fixed-height  flex justify-center items-center">
              <figure>
                <Zoom client:load>
                  <Picture src={image} alt={filename} />
                </Zoom>
                <figcaption>{filename}</figcaption>
              </figure>
            </div>
          </div>
        ))
      )
    }
  </div>
</div>
