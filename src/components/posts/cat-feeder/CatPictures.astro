---
import * as fs from "fs";
import path from "path";
import { capitalize } from "../../../lib/util";
import { Picture } from "astro:assets";
import Zoom from "react-medium-image-zoom";

/**
 * Note that file reads occur relative to project root
 */
const BASE_DIR = "./src/assets/cat-feeder/animals";

function getAnimals(): string[] {
  return fs.readdirSync(BASE_DIR);
}

async function getImages(animalName: string): Promise<any[]> {
  const pathName = path.join(BASE_DIR, animalName);
  return fs
    .readdirSync(pathName)
    .map((fileName) => path.join(BASE_DIR, animalName, fileName))
    .map(
      (fullPath) =>
        import(
          /* @vite-ignore */
          path.join("/", fullPath)
        )
    );
}

// yeah, it does sequential async calls, but it runs at compile time so I don't care.
const paths = await Promise.all(
  getAnimals().map(async (animalName) => [animalName, await getImages(animalName)])
);
---

<style>
  .container {
    display: flex;
  }
  .fixed-height img {
    height: 6em;
    width: 6em;
    object-fit: cover; /* Crops the image to fill the container */
  }
</style>

<div class="container mx-auto p-4">
  <div class="flex flex-wrap gap-4">
    {
      paths.map(([animalName, animalData]) =>
        animalData.map((image: any) => (
          <div class="flex-1 min-w-[100px] max-w-[300px] max-h-[100px]">
            <div class="fixed-height">
              <Zoom client:load>
                <Picture src={image} alt={`A picture of a ${animalName}`} />
              </Zoom>
            </div>
          </div>
        ))
      )
    }
  </div>
</div>
